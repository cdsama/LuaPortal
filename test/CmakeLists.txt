CMAKE_MINIMUM_REQUIRED(VERSION 3.4)
PROJECT(LuaPortalTest)

INCLUDE_DIRECTORIES(
    .
    ../include
)

if (MSVC)
  set (LIB_PREFIX lib)
else (MSVC)
  set (LIB_PREFIX)

  # Tell compiler to use latest C/C++ language standards
  set (CMAKE_C_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
  # Statically link libstdc++ and libgcc
  # so the runtime environment has no need to install extra depdendencies
  set (CMAKE_EXE_LINKER_FLAGS "-static-libstdc++ -static-libgcc")
  # Tell cmake not to add rpath to executables
  set (CMAKE_SKIP_RPATH TRUE)
endif (MSVC)

set (lua_version 5.3.3)
include_directories ("${PROJECT_SOURCE_DIR}/lua/${lua_version}/include")
link_directories ("${PROJECT_SOURCE_DIR}/lua/${lua_version}/lib")

aux_source_directory(. SRC_LIST)

add_executable(lptest ${SRC_LIST})

target_link_libraries (lptest debug ${LIB_PREFIX}luad optimized ${LIB_PREFIX}lua)

set(INSTALL_DESTINATION "${PROJECT_SOURCE_DIR}")

install(
TARGETS lptest
RUNTIME DESTINATION ${INSTALL_DESTINATION}
)